/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

html {
  height: 100%;
  left: 0;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

.footer__wrapper, .slider__wrapper, .features__wrapper, .hero {
  padding: 9.6rem 11.2rem;
}
@media (max-width: 799px) {
  .footer__wrapper, .slider__wrapper, .features__wrapper, .hero {
    padding: 6.4rem 2.4rem;
  }
}

.dg.sc {
  z-index: 99999 !important;
}

@font-face {
  font-family: "Neue Montreal";
  src: url(2842e150d6666a9f53bb.woff), url(3c7fa6d67cf69fb7dcb4.woff2);
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Neue Montreal";
  src: url(07070ee11dc38bfbd060.woff), url(995fc960c55e45d9cd59.woff2);
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Neue Montreal";
  src: url(11ce7260119bd987ca5a.woff), url(82363d624b471941cd6b.woff2);
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
*,
*::after,
*::before {
  box-sizing: border-box;
  user-select: none;
}

* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html {
  line-height: 1;
  font-size: 0.6613756614vw;
}
@media (max-width: 799px) {
  html {
    font-size: 2.6666666667vw;
  }
}

a {
  text-decoration: none;
  outline: none;
  color: inherit;
}

img {
  vertical-align: middle;
}

.content {
  font-family: "Neue Montreal";
  background: #101828;
  color: #ffffff;
}

svg {
  fill: none;
}

.footer__button__text, .lockup__button__text, .slider__button__text, .header__button__text {
  font-family: "Neue Montreal";
  font-size: 1.4rem;
  line-height: 1.9rem;
}

.slide__text, .feature__item__text, .content {
  font-family: "Neue Montreal";
  font-size: 1.6rem;
  line-height: 2.4rem;
}

.slider__text, .features__text, .lockup__text {
  font-family: "Neue Montreal";
  font-size: 2rem;
  line-height: 2.8rem;
}
@media (max-width: 799px) {
  .slider__text, .features__text, .lockup__text {
    font-size: 1.6rem;
    line-height: 2rem;
  }
}

.slide__title, .feature__item__title {
  font-family: "Neue Montreal";
  font-size: 2rem;
  line-height: 3rem;
  font-weight: 600;
}

.footer__text, .slider__title, .features__title {
  font-family: "Neue Montreal";
  font-size: 4.8rem;
  line-height: 6rem;
  font-weight: 500;
}
@media (max-width: 799px) {
  .footer__text, .slider__title, .features__title {
    font-size: 3rem;
    line-height: 3.8rem;
  }
}

.lockup__title {
  font-family: "Neue Montreal";
  font-size: 8rem;
  line-height: 9rem;
  font-weight: 500;
}
@media (max-width: 799px) {
  .lockup__title {
    font-size: 3.6rem;
    line-height: 4.4rem;
  }
}

.slider__button, .header__button {
  display: flex;
  gap: 0.8rem;
  outline: none;
  border: none;
  border-radius: 2.4rem;
  background-color: #1d2c49;
  align-items: center;
  color: #e6f1fe;
  padding: 1rem 1.6rem;
  max-width: max-content;
  cursor: pointer;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

.slider__button:hover, .header__button:hover {
  background-color: #162137;
}

.slider__button:hover .slider__button__icon, .slider__button:hover .header__button__icon, .header__button:hover .slider__button__icon, .header__button:hover .header__button__icon {
  transform: translateX(0.2rem);
}

.slider__button__text, .header__button__text {
  font-weight: 600;
}

.slider__button__icon, .header__button__icon {
  width: 1.6rem;
  height: 1.6rem;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

.lockup__button, .lockup__button__effect {
  display: flex;
  gap: 0.8rem;
  outline: none;
  border: none;
  border-radius: 2.4rem;
  background: linear-gradient(127.99deg, #2b86f9 -1.76%, #184ef9 97.65%, #2b86f9 124.64%);
  align-items: center;
  color: #e6f1fe;
  padding: 1rem 1.6rem;
  margin-top: 2rem;
  cursor: pointer;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

.lockup__button__text {
  font-weight: 600;
}

.lockup__button__icon {
  width: 1.6rem;
  height: 1.6rem;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

.lockup__button:hover .lockup__button__icon, .lockup__button__effect:hover .lockup__button__icon {
  transform: translateX(0.2rem);
}

.footer__button__effect, .footer__button {
  display: flex;
  gap: 0.8rem;
  outline: none;
  border: none;
  border-radius: 2.4rem;
  background: #ffffff;
  align-items: center;
  color: #101828;
  padding: 1rem 1.6rem;
  margin-top: 2rem;
  cursor: pointer;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

.footer__button__text {
  font-weight: 600;
}

.footer__button__icon {
  width: 1.6rem;
  height: 1.6rem;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

.footer__button__effect:hover .footer__button__icon, .footer__button:hover .footer__button__icon {
  transform: translateX(0.2rem);
}

.header {
  padding: 2.4rem 11.2rem;
}
@media (max-width: 799px) {
  .header {
    padding: 2.4rem;
  }
}

.header__wrapper {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo {
  width: 15.5rem;
  height: 4.022rem;
}
@media (max-width: 799px) {
  .logo {
    width: 9.6rem;
    height: 2.491rem;
  }
}

.lockup__wrapper {
  display: grid;
  place-content: center;
  justify-items: center;
  text-align: center;
  gap: 2rem;
}
@media (max-width: 799px) {
  .lockup__wrapper {
    display: flex;
    flex-direction: column;
    text-align: left;
    justify-items: left;
    place-content: unset;
  }
}

.lockup__title {
  font-weight: 500;
  max-width: 80rem;
  background: linear-gradient(100.11deg, #ffffff 22.47%, rgba(255, 255, 255, 0.4) 121.09%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  width: 100%;
}
@media (max-width: 799px) {
  .lockup__title {
    text-align: left;
    max-width: 28.9rem;
  }
}

.lockup__text {
  max-width: 41.6rem;
  width: 100%;
  color: #dbe2f0;
}
@media (max-width: 799px) {
  .lockup__text {
    text-align: left;
    max-width: 29.2rem;
  }
}

.lockup__button__wrapper {
  display: flex;
  position: relative;
  cursor: pointer;
}

.lockup__button__wrapper:hover .lockup__button__effect {
  opacity: 0.5;
}

.lockup__button__effect {
  position: absolute;
  height: 4rem;
  z-index: 1;
  width: 100%;
  margin-top: 2.54rem;
  filter: blur(1.2rem);
  opacity: 0;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

.lockup__button {
  z-index: 2;
}

.features__container {
  width: 100%;
  background: #101828;
}

.features {
  background: linear-gradient(127.99deg, #2b86f9 -1.76%, #184ef9 97.65%, #2b86f9 124.64%);
}

.features__wrapper {
  text-align: left;
  display: grid;
  gap: 2rem;
}
@media (max-width: 799px) {
  .features__wrapper {
    gap: 1.6rem;
    padding: 4.8rem 2.4rem;
  }
}

.features__title {
  max-width: 75.2rem;
}
@media (max-width: 799px) {
  .features__title {
    max-width: 30.1rem;
    width: 100%;
  }
}

.features__text {
  max-width: 51.8rem;
}
@media (max-width: 799px) {
  .features__text {
    max-width: 30.7rem;
  }
}

.feature__wrapper {
  display: grid;
  grid-template-columns: repeat(3, auto);
  grid-template-rows: repeat(2, auto);
  margin-top: 7.2rem;
  gap: 6.4rem;
}
@media (max-width: 799px) {
  .feature__wrapper {
    margin-top: 3.2rem;
    gap: 3.2rem;
    grid-template-columns: auto;
    grid-template-rows: auto;
  }
}

.feature__item {
  gap: 0.8rem;
  width: 35rem;
  height: 30rem;
  display: grid;
  place-content: center;
  cursor: pointer;
}
@media (max-width: 799px) {
  .feature__item {
    width: 100%;
    height: auto;
    max-width: 32.6rem;
  }
}

.feature__icon {
  width: 4rem;
  height: 4rem;
}

.feature__item__title {
  font-weight: 600;
  margin-top: 0.8rem;
}

.slider {
  width: 100%;
}

.slider__wrapper {
  position: relative;
  padding: 19.2rem 11.2rem;
  display: grid;
  gap: 2rem;
}
@media (max-width: 799px) {
  .slider__wrapper {
    padding: 12.8rem 2.4rem;
  }
}

.slider__title {
  max-width: 54.2rem;
}

.slider__text {
  max-width: 44rem;
}

.slider__items {
  width: 100%;
  z-index: 100;
  display: grid;
  grid-template-columns: repeat(3, auto);
  margin-top: 6.4rem;
}
@media (max-width: 799px) {
  .slider__items {
    grid-template-columns: auto;
    margin-top: 16.4rem;
  }
}

.slide {
  width: 100%;
  gap: 6.4rem;
  cursor: pointer;
}
@media (max-width: 799px) {
  .slide {
    margin-bottom: 1.2rem;
  }
}

.slide .bar {
  width: 100%;
  height: 0.1rem;
  background-color: #dbe2f0;
  margin-bottom: 6.4rem;
}
@media (max-width: 799px) {
  .slide .bar {
    margin-bottom: 1.6rem;
  }
}

.slide .progress {
  width: 0%;
  height: 0.1rem;
  background-color: #dbe2f0;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

.slide .progress .active {
  width: 100%;
  height: 0.1rem;
  background-color: #194ed0;
}

.slide__image {
  top: 19.2rem;
  position: absolute;
  right: 17.8rem;
  will-change: z-index;
  transition: z-index 300ms cubic-bezier(0.77, 0, 0.18, 1);
}
@media (max-width: 799px) {
  .slide__image {
    position: absolute;
    top: 41.74rem;
    left: 2.4rem;
  }
}

@media (max-width: 799px) {
  .slide__title {
    font-family: "Neue Montreal";
    font-size: 1.6rem;
    line-height: 2.4rem;
    font-weight: 600;
  }
}

.slide__text {
  margin-top: 1.2rem;
  max-width: 35rem;
}
@media (max-width: 799px) {
  .slide__text {
    max-width: 31.2rem;
    width: 100%;
  }
}

.footer {
  background: linear-gradient(127.99deg, #2b86f9 -1.76%, #184ef9 97.65%, #2b86f9 124.64%);
  width: 100%;
}

.footer__wrapper {
  display: grid;
  justify-items: center;
  gap: 4.8rem;
}

.footer__text {
  text-align: center;
  font-weight: 600;
}

.footer__button__wrapper {
  display: flex;
  position: relative;
  cursor: pointer;
}

.footer__button__wrapper:hover .footer__button__effect {
  opacity: 0.5;
}

.footer__button {
  z-index: 2;
}

.footer__button__effect {
  position: absolute;
  height: 4rem;
  z-index: 1;
  width: 100%;
  margin-top: 2.54rem;
  filter: blur(1.2rem);
  opacity: 0;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/