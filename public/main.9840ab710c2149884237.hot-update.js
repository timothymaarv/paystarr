/*! For license information please see main.9840ab710c2149884237.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatepaystarr("main",{"./app/classes/Page.js":(e,t,r)=>{r.r(t),r.d(t,{default:()=>l});var s=r("./node_modules/lodash/lodash.js");class l{constructor({element:e,elements:t,id:r}){this.selector=e,this.selectorChildren={...t},this.id=r}create(){this.element=document.querySelector(this.selector),this.elements={},(0,s.each)(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))}))}destroy(){this.removeEventListeners()}}},"./app/pages/home/index.js":(e,t,r)=>{r.r(t),r.d(t,{default:()=>o});var s=r("./app/classes/Page.js"),l=r("./node_modules/lodash/lodash.js");class o extends s.default{constructor(){super({id:"home",element:".home",elements:{featureItems:document.querySelectorAll(".feature__item"),slides:document.querySelectorAll(".slide")}}),this.scroll(),this.featureAnimations(),this.slideAnimations(),this.footerAnimations()}create(){super.create()}scroll(){butter.init({wrapperId:"butter",cancelOnTouch:!1,wrapperDamper:.08})}featureAnimations(){gsap.registerPlugin("ScrollTrigger"),ScrollTrigger.create({animation:gsap.to(".features",{borderRadius:"6rem",margin:"0rem 1.8rem"}),scrub:!0,start:"top center",trigger:".feature__wrapper",endTrigger:".slider",end:"top top"}),(0,l.each)(this.selectorChildren.featureItems,(e=>{e.querySelector(".feature__item__title").textContent,e.querySelector(".feature__item__title"),e.querySelector(".feature__icon")}))}footerAnimations(){gsap.registerPlugin("ScrollTrigger"),ScrollTrigger.create({animation:gsap.to(".footer",{borderTopLeftRadius:"6rem",borderTopRightRadius:"6rem"}),scrub:!0,start:"bottom 70%",trigger:".slider",endTrigger:".footer",end:"bottom 100%"})}slideAnimations(){const e=["Secure Currency Exchange","Fast Payment Processing","Multiple Payment Options"];let t=0,r=0;(0,l.each)(this.selectorChildren.slides,((s,l)=>{s.querySelector(".slide__title").textContent;const o=s.querySelector(".slide__title"),i=s.querySelector(".slide__text"),n=s.querySelector(".slide__image"),a=s.querySelector(".progress"),c=s.querySelector(".bar"),d=(document.cloneNode(a),setInterval((()=>{r+=1,100===r&&(t=t<e.length-1?t%e.length+1:0,r=0),l===t?u():m()}),300));function u(){gsap.to(a,{width:`${r}%`}),gsap.to(n,{display:"block",zIndex:10,duration:3}),o.style.opacity=1,i.style.opacity=1,a.style.display="block",a.style.backgroundColor="#2B86F9",c.appendChild(a)}function m(){a.style.display="none",o.style.opacity=.4,i.style.opacity=.4,gsap.to(n,{display:"none",zIndex:1,duration:3})}s.addEventListener("click",(()=>{t=l,clearInterval(d),setInterval((()=>{r+=1,100===r&&(t=t<e.length-1?t%e.length+1:0,r=0),l===t?u():m()}),300)}))}))}}}},(function(e){e.h=()=>"711b7b53e39f349a971c"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,